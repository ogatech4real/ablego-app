[build]
  publish = "dist"
  command = "npm install && npm run build"
  functions = "netlify/functions"

[build.environment]
  NODE_VERSION = "18"
  NODE_ENV = "production"
  CI = "true"
  # Environment variables are injected from Netlify dashboard
  # VITE_SUPABASE_URL = "from_netlify_env"
  # VITE_SUPABASE_ANON_KEY = "from_netlify_env" 
  # VITE_STRIPE_PUBLISHABLE_KEY = "from_netlify_env"
  # VITE_GOOGLE_MAPS_API_KEY = "from_netlify_env"

# SPA redirects - handle client-side routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  force = false

# Specific route redirects for better SEO
[[redirects]]
  from = "/admin"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/admin/*"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/booking"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/booking/*"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/dashboard"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/dashboard/*"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/login"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/signup"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/about"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/contact"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/services"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/safety"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/privacy-policy"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/terms"
  to = "/index.html"
  status = 200

# Security headers
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Cache-Control = "public, max-age=3600, must-revalidate"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains"

# Cache static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/static/js/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/static/css/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.mp4"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=86400"

# Environment-specific settings
[context.production]
  [context.production.environment]
    NODE_ENV = "production"
    GENERATE_SOURCEMAP = "false"

[context.deploy-preview]
  [context.deploy-preview.environment]
    NODE_ENV = "staging"
    GENERATE_SOURCEMAP = "true"

[context.branch-deploy]
  [context.branch-deploy.environment]
    NODE_ENV = "staging"
    GENERATE_SOURCEMAP = "true"